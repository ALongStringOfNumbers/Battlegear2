--- 
+++ 
@@ -2,6 +2,8 @@
 
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+import mods.battlegear2.client.utils.BattlegearClientUtils;
+import mods.battlegear2.api.core.BattlegearUtils;
 import net.minecraft.client.Minecraft;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
@@ -14,6 +16,17 @@
 @SideOnly(Side.CLIENT)
 public class EntityOtherPlayerMP extends AbstractClientPlayer
 {
+		/*
+         * Mine & Blade: Notes
+         * Edits made by: nerd-boy
+         *
+         * Edits: 2
+         * Added Methods: 0
+         * Added Fields: 0
+         *
+         * Prevention of index out of bounds error
+         */
+	
     private boolean isItemInUse;
     private int otherPlayerMPPosRotationIncrements;
     private double otherPlayerMPX;
@@ -82,17 +95,9 @@
         this.limbSwingAmount += (f - this.limbSwingAmount) * 0.4F;
         this.limbSwing += this.limbSwingAmount;
 
-        if (!this.isItemInUse && this.isEating() && this.inventory.mainInventory[this.inventory.currentItem] != null)
-        {
-            ItemStack itemstack = this.inventory.mainInventory[this.inventory.currentItem];
-            this.setItemInUse(this.inventory.mainInventory[this.inventory.currentItem], Item.itemsList[itemstack.itemID].getMaxItemUseDuration(itemstack));
-            this.isItemInUse = true;
-        }
-        else if (this.isItemInUse && !this.isEating())
-        {
-            this.clearItemInUse();
-            this.isItemInUse = false;
-        }
+        //-----MB-Edited-----
+        //Simplified for ASM
+        isItemInUse = BattlegearClientUtils.entityOtherPlayerIsItemInUseHook(this, isItemInUse);
     }
 
     public float getShadowSize()
@@ -162,7 +167,8 @@
     {
         if (par1 == 0)
         {
-            this.inventory.mainInventory[this.inventory.currentItem] = par2ItemStack;
+        	//-----MB-Edited-----
+        	BattlegearUtils.setPlayerCurrentItem(this, par2ItemStack);
         }
         else
         {
