--- 
+++ 
@@ -2,6 +2,7 @@
 
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+import mods.battlegear2.utils.BattlegearUtils;
 import net.minecraft.client.Minecraft;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
@@ -13,7 +14,18 @@
 
 @SideOnly(Side.CLIENT)
 public class EntityOtherPlayerMP extends AbstractClientPlayer
-{
+{	
+	/*
+	 * Mine & Blade: Notes
+	 * Edits made by: nerd-boy
+	 * 
+	 * Edits: 2
+	 * Added Methods: 0
+	 * Added Fields: 0
+	 * 
+	 * Prevention of index out of bounds error
+	 */
+	
     private boolean isItemInUse;
     private int otherPlayerMPPosRotationIncrements;
     private double otherPlayerMPX;
@@ -81,11 +93,13 @@
 
         this.limbYaw += (f - this.limbYaw) * 0.4F;
         this.limbSwing += this.limbYaw;
-
-        if (!this.isItemInUse && this.isEating() && this.inventory.mainInventory[this.inventory.currentItem] != null)
-        {
-            ItemStack itemstack = this.inventory.mainInventory[this.inventory.currentItem];
-            this.setItemInUse(this.inventory.mainInventory[this.inventory.currentItem], Item.itemsList[itemstack.itemID].getMaxItemUseDuration(itemstack));
+        
+        //-----MB-Edited-----
+        //Simplified for ASM
+        if (!this.isItemInUse && this.isEating() && inventory.getStackInSlot(inventory.currentItem) != null)
+        {
+            ItemStack itemstack = inventory.getStackInSlot(inventory.currentItem);
+            this.setItemInUse(itemstack, Item.itemsList[itemstack.itemID].getMaxItemUseDuration(itemstack));
             this.isItemInUse = true;
         }
         else if (this.isItemInUse && !this.isEating())
@@ -162,7 +176,8 @@
     {
         if (par1 == 0)
         {
-            this.inventory.mainInventory[this.inventory.currentItem] = par2ItemStack;
+        	//-----MB-Edited-----
+        	BattlegearUtils.setPlayerCurrentItem(this, par2ItemStack);
         }
         else
         {
